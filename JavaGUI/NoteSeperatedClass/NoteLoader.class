package JavaLearning.NoteTaker;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.time.LocalDateTime;
import java.util.ArrayList;

public class NoteLoader {
    private String directoryPath;

    public NoteLoader(String directoryPath) {
        this.directoryPath = directoryPath;
    }

    public ArrayList<Note> loadNotes() {
        ArrayList<Note> notesList = new ArrayList<Note>();

        File directory = new File(directoryPath);

        if (directory.exists() && directory.isDirectory()) {
            File[] files = directory.listFiles();
            for (File file : files) {
                if (file.isFile() && file.getName().endsWith(".txt")) {
                    Note note = loadNoteFromFile(file);
                    notesList.add(note);
                }
            }
        }

        return notesList;
    }

    private Note loadNoteFromFile(File file) {
        StringBuilder content = new StringBuilder();
        String title = null;
        LocalDateTime creationTime = null;
        LocalDateTime modificationTime = null;

        try {
            FileReader reader = new FileReader(file);
            BufferedReader bufferedReader = new BufferedReader(reader);

            // Read first line as title
            title = bufferedReader.readLine();

            // Read second line as creation time
            String creationTimeStr = bufferedReader.readLine();
            creationTime = LocalDateTime.parse(creationTimeStr);

            // Read remaining lines as content
            String line;
            while ((line = bufferedReader.readLine()) != null) {
                content.append(line);
                content.append(System.lineSeparator());
            }

            reader.close();
        } catch (IOException e) {
            System.out.println("Error: " + e.getMessage());
        }

        Note note = new Note(title, content.toString());
        note.setTitle(title);
        note.setContent(content.toString());
        note.getCreationTime();
        note.getModificationTime();

        return note;
    }
}
